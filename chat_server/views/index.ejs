<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>   
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css">
       <!-- jQuery library -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <!-- Popper JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.0/umd/popper.min.js"></script>
    <!-- Latest compiled JavaScript -->
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.1.0/js/bootstrap.min.js"></script>
    <script src="./javascripts/socket.io.js"></script>
    <script src="./javascripts/jquery-3.1.1.min.js"></script>


    <script>
      var host;   //웹서버의 주소
      var port;   //웹서버의 포트
      var socket; //웹서버와 연결


      $(function(){//웹페이지가 로드될 때 필요한 코드를 작성
        $("#loginButton").bind('click', function(event) {
          var id = $("#idInput").val();
          var password = $("#passwordInput").val();
          //서버에게 전달할 데이터 객체를 만듬
          var message = {msg_type : 'login', id : id, password : password};

          if(socket == null){
            alert("서버에 연결되어 있지 않습니다. 먼저 연결해주세요.");
            return;
          }
          socket.emit('message', message);
        });
        //send버튼이 눌렸을때 호출되는 콜백함수
        $("#sendButton").bind('click', function(event) {

          //입력한 보내는사람, 받는사람, 메시지데이터를 읽어옴
          var sender = $("#senderInput").val();
          var recepient = $("#recepientInput").val();
          var data = $("#dataInput").val();

          //서버에게 전송할 데이터 객체, 
          var message = {msg_type : 'chat', sender : sender, recepient : recepient, data : data};

          console.log(message);

          //웹서버와 연결이 되어있는지 확인하는 코드
          if(socket == null){
            alert("서버에 연결되어 있지 않습니다. 먼저 연결해주세요.");
            return;
          }
          //메세지를 서버에게 전송함
          socket.emit('message', message);
        });

        //connectButton이 눌렸을 때
        $("#connectButton").bind('click', function(event) {
          //println() 메소드
          println('connectButton이 눌렸습니다.');

          //입력한 웹서버의 주소와 포트번호를 변수에 저장
          host = $('#hostInput').val();
          port = $('#portInput').val();

          //connectToServer() 함수
          connectToServer();
        });
     });

     //웹페이지에 글자를 표시하는 println()함수
    function println(data) {
      console.log(data);
      $('#result').append('<p>'+data+'<p>');
    }

    // 서버와 웹페이지간에 연결을 만들어주는 connectToServer()함수
    function connectToServer(){
      //웹서버 접속주소를 저장하는 변수
      var url = 'http://' + host + ':' + port;
      //웹서버와 연결해주는 객체 생성
      socket = io.connect(url);
      
      //웹서버와 연결 이벤트가 발생시 동작
      socket.on('connect', function(){
            println('웹소켓 서버에 연결되었습니다. : ' + url);

            //emit 소켓으로 보낼 때 '헬로메세지투서버'라는 테그로 데이터를 보냄
            socket.emit('hello_message_to_server', {msg_type : 'hello', data : ''}); //보낼때

            //on 소켓으로 받을 때 'hello message to client 라는 태그로 데이터를 받음
            socket.on('hello_message_to_client',function(message) { //받을때
              println(message.data);
        });

        //message 태그로 데이터를 받음
        socket.on('message', function(message){
          println(message.sender + ":" + message.data);
        });

        //alert 태그로 데이터를 받음
        socket.on('alert', function(response_message){
          alert(response_message.data);
        });

      });
      
      
      //웹서버와 연결이 단절되는 이벤트가 발생 시 동작
      socket.on('disconnect', function() { //받을때
          println('웹소켓 연결이 종료되었습니다.');
      });
    }



    </script>

</head>
  <body>

      <div><p><h2>채팅 클라이언트 01</h2></p>

        <br>
        <div>
            <input type="text" value="오징어" id="idInput">
            <input type="password" value="123456" id="passwordInput">
            <br>
            <input type="button" value="로그인" id="loginButton">
            <input type="button" value="로그아웃" id="logoutButton">
        </div>


      </div>
      <div><span>보내는 사람 아이디 :</span>
        <input type="text" id="senderInput" value="오징어" /></div>
      <div><span>받는 사람 아이디 :</span>
        <input type="text" id="recepientInput" value="문어" /></div>
      <div><span>messeage :</span>
        <input type="text" id="dataInput" value="안녕!" /></div>

      <br>
      <input type="button" id="sendButton" value="전송" />

      </div>
    

      <div class="maindiv form-inline mr-sm-2">

              <input type="text" class="form-control mb-2 mr-sm-2" id="hostInput" value="localhost">
              <input type="text" class="form-control mb-2 mr-sm-2" id="portInput" value="3000">

              <button type="submit" class="btn btn-outline-success mb-2" id="connectButton">연결하기</button>
      </div>

  <hr>
  <div><h4>결과 :  </h4>
    <div id="result"></div>
</div>
 
  </body>
</html>
